import Head from "next/head";
import Image from "next/image";
import { useEffect, useRef, useState } from "react";
import Button from "~/components/Button/Button";

export default function Home() {
  const [isPlaying, set_isPlaying] = useState(false);
  const audioPlayerRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    const playFile = async () => {
      await audioPlayerRef.current?.play();
    };
    if (isPlaying) {
      playFile().catch(console.error);
    } else {
      audioPlayerRef.current?.pause();
    }
  }, [isPlaying]);

  return (
    <>
      <Head>
        <title>Player Widget</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Global Page */}
      <main className="flex min-h-screen w-full  items-center justify-center bg-black px-2 font-inter text-white">
        {/* Full Podcast player  */}
        <div className="podcast-player w-full max-w-[400px] rounded-3xl pb-2 text-center">
          {/* Podcast cover section (1:1 ratio, the cover is cropped on small screen) */}
          <div className="cover relative flex min-h-[400px] flex-col justify-end">
            <div className="cover-mask absolute inset-0 z-10"></div>
            <Image
              alt="podcast-cover"
              className="absolute rounded-t-3xl object-cover"
              fill
              src="/cover.png"
            ></Image>

            {/* Podcast title and episode  */}
            <div className="relative flex w-full flex-col">
              <div className="bottom-blur absolute bottom-0 flex h-52 w-full backdrop-blur-sm"></div>
              <div className="z-20 flex w-full flex-col items-center gap-0.5  leading-6 ">
                <div className="font-semibold">
                  32. Massa vill ha upprättelse!
                </div>
                <div className=" flex text-[13px] font-light opacity-70">
                  1 January 1970・
                  <span className="text-white opacity-50">Episode</span>・
                  <Image
                    width={12}
                    height={12}
                    src="/icons/e-icon.svg"
                    alt="Space icon"
                  ></Image>
                </div>
              </div>
            </div>
          </div>

          {/* Scrubber and position */}
          <div className="info relative z-20 mb-2 mt-4 w-full px-10 text-white">
            <div className="scrubber relative h-1.5 w-full overflow-hidden rounded-[3px]">
              {/* On the scrubber-inner, we can modify the width percentage programmatically 
                  if the player is a real one 
              */}
              <div className="scrubber-inner absolute inset-0 z-10 h-full w-[20%]"></div>
            </div>
            <div className="mt-4 flex justify-between font-ion text-sm font-bold">
              <div>
                <div className="absolute text-light-blue text-opacity-[6%]">
                  88:88:88
                </div>
                27:22
              </div>
              <div
                className="text-light-blue"
                style={{
                  textShadow: "0px 0px 8px 0px rgba(133, 209, 255, 0.20)",
                }}
              >
                1x speed
              </div>
              <div className="relative">
                <div className="absolute right-0 text-light-blue text-opacity-[6%]">
                  88:88:88
                </div>
                -46:27
              </div>
            </div>
          </div>

          {/* Podcast controls */}
          <div className="controls flex items-center justify-between px-6 py-4">
            <Button icon="previous-track"></Button>
            <Button icon="backward-15sec"></Button>
            <Button
              onClick={() => set_isPlaying(!isPlaying)}
              icon={isPlaying ? "pause" : "play"}
            ></Button>
            <Button icon="forward-30sec"></Button>
            <Button icon="next-track"></Button>
          </div>
        </div>

        <audio loop ref={audioPlayerRef}>
          <source src="/t-bana-jingle.mp3" type="audio/mp3" />
          Your browser does not support the audio element.
        </audio>
      </main>
    </>
  );
}
